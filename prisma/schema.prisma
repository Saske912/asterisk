generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model alembic_version_config {
  version_num String @id @db.VarChar(32)
}

model extensions {
  id       BigInt @id @unique(map: "id") @default(autoincrement())
  context  String @db.VarChar(40)
  exten    String @db.VarChar(40)
  priority Int
  app      String @db.VarChar(40)
  appdata  String @db.VarChar(256)

  @@unique([context, exten, priority], map: "context")
}

model iaxfriends {
  id                Int                           @id @default(autoincrement())
  name              String                        @unique(map: "name") @db.VarChar(40)
  type              iaxfriends_type?
  username          String?                       @db.VarChar(40)
  mailbox           String?                       @db.VarChar(40)
  secret            String?                       @db.VarChar(40)
  dbsecret          String?                       @db.VarChar(40)
  context           String?                       @db.VarChar(40)
  regcontext        String?                       @db.VarChar(40)
  host              String?                       @db.VarChar(40)
  ipaddr            String?                       @db.VarChar(40)
  port              Int?
  defaultip         String?                       @db.VarChar(20)
  sourceaddress     String?                       @db.VarChar(20)
  mask              String?                       @db.VarChar(20)
  regexten          String?                       @db.VarChar(40)
  regseconds        Int?
  accountcode       String?                       @db.VarChar(80)
  mohinterpret      String?                       @db.VarChar(20)
  mohsuggest        String?                       @db.VarChar(20)
  inkeys            String?                       @db.VarChar(40)
  outkeys           String?                       @db.VarChar(40)
  language          String?                       @db.VarChar(10)
  callerid          String?                       @db.VarChar(100)
  cid_number        String?                       @db.VarChar(40)
  sendani           iaxfriends_sendani?
  fullname          String?                       @db.VarChar(40)
  trunk             iaxfriends_trunk?
  auth              String?                       @db.VarChar(20)
  maxauthreq        Int?
  requirecalltoken  iaxfriends_requirecalltoken?
  encryption        iaxfriends_encryption?
  transfer          iaxfriends_transfer?
  jitterbuffer      iaxfriends_jitterbuffer?
  forcejitterbuffer iaxfriends_forcejitterbuffer?
  disallow          String?                       @db.VarChar(200)
  allow             String?                       @db.VarChar(200)
  codecpriority     String?                       @db.VarChar(40)
  qualify           String?                       @db.VarChar(10)
  qualifysmoothing  iaxfriends_qualifysmoothing?
  qualifyfreqok     String?                       @db.VarChar(10)
  qualifyfreqnotok  String?                       @db.VarChar(10)
  timezone          String?                       @db.VarChar(20)
  adsi              iaxfriends_adsi?
  amaflags          String?                       @db.VarChar(20)
  setvar            String?                       @db.VarChar(200)

  @@index([host, port], map: "iaxfriends_host_port")
  @@index([ipaddr, port], map: "iaxfriends_ipaddr_port")
  @@index([name], map: "iaxfriends_name")
  @@index([name, host], map: "iaxfriends_name_host")
  @@index([name, ipaddr, port], map: "iaxfriends_name_ipaddr_port")
}

model meetme {
  bookid            Int       @id @default(autoincrement())
  confno            String    @db.VarChar(80)
  starttime         DateTime? @db.DateTime(0)
  endtime           DateTime? @db.DateTime(0)
  pin               String?   @db.VarChar(20)
  adminpin          String?   @db.VarChar(20)
  opts              String?   @db.VarChar(20)
  adminopts         String?   @db.VarChar(20)
  recordingfilename String?   @db.VarChar(80)
  recordingformat   String?   @db.VarChar(10)
  maxusers          Int?
  members           Int

  @@index([confno, starttime, endtime], map: "meetme_confno_start_end")
}

model musiconhold {
  name              String              @id @db.VarChar(80)
  mode              musiconhold_mode?
  directory         String?             @db.VarChar(255)
  application       String?             @db.VarChar(255)
  digit             String?             @db.VarChar(1)
  sort              String?             @db.VarChar(10)
  format            String?             @db.VarChar(10)
  stamp             DateTime?           @db.DateTime(0)
  musiconhold_entry musiconhold_entry[]
}

model musiconhold_entry {
  name        String      @db.VarChar(80)
  position    Int
  entry       String      @db.VarChar(1024)
  musiconhold musiconhold @relation(fields: [name], references: [name], onUpdate: Restrict, map: "fk_musiconhold_entry_name_musiconhold")

  @@id([name, position])
}

model ps_aors {
  id                   String                        @unique(map: "id") @db.VarChar(40)
  contact              String?                       @db.VarChar(255)
  default_expiration   Int?
  mailboxes            String?                       @db.VarChar(80)
  max_contacts         Int?
  minimum_expiration   Int?
  remove_existing      ps_aors_remove_existing?
  qualify_frequency    Int?
  authenticate_qualify ps_aors_authenticate_qualify?
  maximum_expiration   Int?
  outbound_proxy       String?                       @db.VarChar(40)
  support_path         ps_aors_support_path?
  qualify_timeout      Float?                        @db.Float
  voicemail_extension  String?                       @db.VarChar(40)
  remove_unavailable   ps_aors_remove_unavailable?

  @@index([id], map: "ps_aors_id")
  @@index([qualify_frequency, contact], map: "ps_aors_qualifyfreq_contact")
}

model ps_asterisk_publications {
  id                   String                                  @unique(map: "id") @db.VarChar(40)
  devicestate_publish  String?                                 @db.VarChar(40)
  mailboxstate_publish String?                                 @db.VarChar(40)
  device_state         ps_asterisk_publications_device_state?
  device_state_filter  String?                                 @db.VarChar(256)
  mailbox_state        ps_asterisk_publications_mailbox_state?
  mailbox_state_filter String?                                 @db.VarChar(256)

  @@index([id], map: "ps_asterisk_publications_id")
}

model ps_auths {
  id             String              @unique(map: "id") @db.VarChar(40)
  auth_type      ps_auths_auth_type?
  nonce_lifetime Int?
  md5_cred       String?             @db.VarChar(40)
  password       String?             @db.VarChar(80)
  realm          String?             @db.VarChar(40)
  username       String?             @db.VarChar(40)
  refresh_token  String?             @db.VarChar(255)
  oauth_clientid String?             @db.VarChar(255)
  oauth_secret   String?             @db.VarChar(255)

  @@index([id], map: "ps_auths_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ps_contacts {
  id                   String?                           @unique(map: "id") @db.VarChar(255)
  uri                  String?                           @db.VarChar(511)
  expiration_time      BigInt?
  qualify_frequency    Int?
  outbound_proxy       String?                           @db.VarChar(40)
  path                 String?                           @db.Text
  user_agent           String?                           @db.VarChar(255)
  qualify_timeout      Float?                            @db.Float
  reg_server           String?                           @db.VarChar(255)
  authenticate_qualify ps_contacts_authenticate_qualify?
  via_addr             String?                           @db.VarChar(40)
  via_port             Int?
  call_id              String?                           @db.VarChar(255)
  endpoint             String?                           @db.VarChar(40)
  prune_on_boot        ps_contacts_prune_on_boot?

  @@unique([id, reg_server], map: "ps_contacts_uq")
  @@index([id], map: "ps_contacts_id")
  @@index([qualify_frequency, expiration_time], map: "ps_contacts_qualifyfreq_exp")
  @@ignore
}

model ps_domain_aliases {
  id     String  @unique(map: "id") @db.VarChar(40)
  domain String? @db.VarChar(80)

  @@index([id], map: "ps_domain_aliases_id")
}

model ps_endpoint_id_ips {
  id           String                          @unique(map: "id") @db.VarChar(40)
  endpoint     String?                         @db.VarChar(40)
  match        String?                         @db.VarChar(80)
  srv_lookups  ps_endpoint_id_ips_srv_lookups?
  match_header String?                         @db.VarChar(255)

  @@index([id], map: "ps_endpoint_id_ips_id")
}

model ps_endpoints {
  id                                 String                                           @unique(map: "id") @db.VarChar(40)
  transport                          String?                                          @db.VarChar(40)
  aors                               String?                                          @db.VarChar(200)
  auth                               String?                                          @db.VarChar(40)
  context                            String?                                          @db.VarChar(40)
  disallow                           String?                                          @db.VarChar(200)
  allow                              String?                                          @db.VarChar(200)
  direct_media                       ps_endpoints_direct_media?
  connected_line_method              ps_endpoints_connected_line_method?
  direct_media_method                ps_endpoints_direct_media_method?
  direct_media_glare_mitigation      ps_endpoints_direct_media_glare_mitigation?
  disable_direct_media_on_nat        ps_endpoints_disable_direct_media_on_nat?
  dtmf_mode                          ps_endpoints_dtmf_mode?
  external_media_address             String?                                          @db.VarChar(40)
  force_rport                        ps_endpoints_force_rport?
  ice_support                        ps_endpoints_ice_support?
  identify_by                        String?                                          @db.VarChar(80)
  mailboxes                          String?                                          @db.VarChar(40)
  moh_suggest                        String?                                          @db.VarChar(40)
  outbound_auth                      String?                                          @db.VarChar(40)
  outbound_proxy                     String?                                          @db.VarChar(40)
  rewrite_contact                    ps_endpoints_rewrite_contact?
  rtp_ipv6                           ps_endpoints_rtp_ipv6?
  rtp_symmetric                      ps_endpoints_rtp_symmetric?
  send_diversion                     ps_endpoints_send_diversion?
  send_pai                           ps_endpoints_send_pai?
  send_rpid                          ps_endpoints_send_rpid?
  timers_min_se                      Int?
  timers                             ps_endpoints_timers?
  timers_sess_expires                Int?
  callerid                           String?                                          @db.VarChar(40)
  callerid_privacy                   ps_endpoints_callerid_privacy?
  callerid_tag                       String?                                          @db.VarChar(40)
  rel                                ps_endpoints_100rel?                             @map("100rel")
  aggregate_mwi                      ps_endpoints_aggregate_mwi?
  trust_id_inbound                   ps_endpoints_trust_id_inbound?
  trust_id_outbound                  ps_endpoints_trust_id_outbound?
  use_ptime                          ps_endpoints_use_ptime?
  use_avpf                           ps_endpoints_use_avpf?
  media_encryption                   ps_endpoints_media_encryption?
  inband_progress                    ps_endpoints_inband_progress?
  call_group                         String?                                          @db.VarChar(40)
  pickup_group                       String?                                          @db.VarChar(40)
  named_call_group                   String?                                          @db.VarChar(40)
  named_pickup_group                 String?                                          @db.VarChar(40)
  device_state_busy_at               Int?
  fax_detect                         ps_endpoints_fax_detect?
  t38_udptl                          ps_endpoints_t38_udptl?
  t38_udptl_ec                       ps_endpoints_t38_udptl_ec?
  t38_udptl_maxdatagram              Int?
  t38_udptl_nat                      ps_endpoints_t38_udptl_nat?
  t38_udptl_ipv6                     ps_endpoints_t38_udptl_ipv6?
  tone_zone                          String?                                          @db.VarChar(40)
  language                           String?                                          @db.VarChar(40)
  one_touch_recording                ps_endpoints_one_touch_recording?
  record_on_feature                  String?                                          @db.VarChar(40)
  record_off_feature                 String?                                          @db.VarChar(40)
  rtp_engine                         String?                                          @db.VarChar(40)
  allow_transfer                     ps_endpoints_allow_transfer?
  allow_subscribe                    ps_endpoints_allow_subscribe?
  sdp_owner                          String?                                          @db.VarChar(40)
  sdp_session                        String?                                          @db.VarChar(40)
  tos_audio                          String?                                          @db.VarChar(10)
  tos_video                          String?                                          @db.VarChar(10)
  sub_min_expiry                     Int?
  from_domain                        String?                                          @db.VarChar(40)
  from_user                          String?                                          @db.VarChar(40)
  mwi_from_user                      String?                                          @db.VarChar(40)
  dtls_verify                        String?                                          @db.VarChar(40)
  dtls_rekey                         String?                                          @db.VarChar(40)
  dtls_cert_file                     String?                                          @db.VarChar(200)
  dtls_private_key                   String?                                          @db.VarChar(200)
  dtls_cipher                        String?                                          @db.VarChar(200)
  dtls_ca_file                       String?                                          @db.VarChar(200)
  dtls_ca_path                       String?                                          @db.VarChar(200)
  dtls_setup                         ps_endpoints_dtls_setup?
  srtp_tag_32                        ps_endpoints_srtp_tag_32?
  media_address                      String?                                          @db.VarChar(40)
  redirect_method                    ps_endpoints_redirect_method?
  set_var                            String?                                          @db.Text
  cos_audio                          Int?
  cos_video                          Int?
  message_context                    String?                                          @db.VarChar(40)
  force_avp                          ps_endpoints_force_avp?
  media_use_received_transport       ps_endpoints_media_use_received_transport?
  accountcode                        String?                                          @db.VarChar(80)
  user_eq_phone                      ps_endpoints_user_eq_phone?
  moh_passthrough                    ps_endpoints_moh_passthrough?
  media_encryption_optimistic        ps_endpoints_media_encryption_optimistic?
  rpid_immediate                     ps_endpoints_rpid_immediate?
  g726_non_standard                  ps_endpoints_g726_non_standard?
  rtp_keepalive                      Int?
  rtp_timeout                        Int?
  rtp_timeout_hold                   Int?
  bind_rtp_to_media_address          ps_endpoints_bind_rtp_to_media_address?
  voicemail_extension                String?                                          @db.VarChar(40)
  mwi_subscribe_replaces_unsolicited ps_endpoints_mwi_subscribe_replaces_unsolicited?
  deny                               String?                                          @db.VarChar(95)
  permit                             String?                                          @db.VarChar(95)
  acl                                String?                                          @db.VarChar(40)
  contact_deny                       String?                                          @db.VarChar(95)
  contact_permit                     String?                                          @db.VarChar(95)
  contact_acl                        String?                                          @db.VarChar(40)
  subscribe_context                  String?                                          @db.VarChar(40)
  fax_detect_timeout                 Int?
  contact_user                       String?                                          @db.VarChar(80)
  preferred_codec_only               ps_endpoints_preferred_codec_only?
  asymmetric_rtp_codec               ps_endpoints_asymmetric_rtp_codec?
  rtcp_mux                           ps_endpoints_rtcp_mux?
  allow_overlap                      ps_endpoints_allow_overlap?
  refer_blind_progress               ps_endpoints_refer_blind_progress?
  notify_early_inuse_ringing         ps_endpoints_notify_early_inuse_ringing?
  max_audio_streams                  Int?
  max_video_streams                  Int?
  webrtc                             ps_endpoints_webrtc?
  dtls_fingerprint                   ps_endpoints_dtls_fingerprint?
  incoming_mwi_mailbox               String?                                          @db.VarChar(40)
  bundle                             ps_endpoints_bundle?
  dtls_auto_generate_cert            ps_endpoints_dtls_auto_generate_cert?
  follow_early_media_fork            ps_endpoints_follow_early_media_fork?
  accept_multiple_sdp_answers        ps_endpoints_accept_multiple_sdp_answers?
  suppress_q850_reason_headers       ps_endpoints_suppress_q850_reason_headers?
  trust_connected_line               ps_endpoints_trust_connected_line?
  send_connected_line                ps_endpoints_send_connected_line?
  ignore_183_without_sdp             ps_endpoints_ignore_183_without_sdp?
  codec_prefs_incoming_offer         String?                                          @db.VarChar(128)
  codec_prefs_outgoing_offer         String?                                          @db.VarChar(128)
  codec_prefs_incoming_answer        String?                                          @db.VarChar(128)
  codec_prefs_outgoing_answer        String?                                          @db.VarChar(128)
  stir_shaken                        ps_endpoints_stir_shaken?
  send_history_info                  ps_endpoints_send_history_info?
  allow_unauthenticated_options      ps_endpoints_allow_unauthenticated_options?
  t38_bind_udptl_to_media_address    ps_endpoints_t38_bind_udptl_to_media_address?
  geoloc_incoming_call_profile       String?                                          @db.VarChar(80)
  geoloc_outgoing_call_profile       String?                                          @db.VarChar(80)
  incoming_call_offer_pref           ps_endpoints_incoming_call_offer_pref?
  outgoing_call_offer_pref           ps_endpoints_outgoing_call_offer_pref?
  stir_shaken_profile                String?                                          @db.VarChar(80)
  security_negotiation               ps_endpoints_security_negotiation?
  security_mechanisms                String?                                          @db.VarChar(512)
  send_aoc                           ps_endpoints_send_aoc?

  @@index([id], map: "ps_endpoints_id")
}

model ps_globals {
  id                                         String                                                 @unique(map: "id") @db.VarChar(40)
  max_forwards                               Int?
  user_agent                                 String?                                                @db.VarChar(255)
  default_outbound_endpoint                  String?                                                @db.VarChar(40)
  debug                                      String?                                                @db.VarChar(40)
  endpoint_identifier_order                  String?                                                @db.VarChar(40)
  max_initial_qualify_time                   Int?
  default_from_user                          String?                                                @db.VarChar(80)
  keep_alive_interval                        Int?
  regcontext                                 String?                                                @db.VarChar(80)
  contact_expiration_check_interval          Int?
  default_voicemail_extension                String?                                                @db.VarChar(40)
  disable_multi_domain                       ps_globals_disable_multi_domain?
  unidentified_request_count                 Int?
  unidentified_request_period                Int?
  unidentified_request_prune_interval        Int?
  default_realm                              String?                                                @db.VarChar(40)
  mwi_tps_queue_high                         Int?
  mwi_tps_queue_low                          Int?
  mwi_disable_initial_unsolicited            ps_globals_mwi_disable_initial_unsolicited?
  ignore_uri_user_options                    ps_globals_ignore_uri_user_options?
  use_callerid_contact                       ps_globals_use_callerid_contact?
  send_contact_status_on_update_registration ps_globals_send_contact_status_on_update_registration?
  taskprocessor_overload_trigger             ps_globals_taskprocessor_overload_trigger?
  norefersub                                 ps_globals_norefersub?
  allow_sending_180_after_183                ps_globals_allow_sending_180_after_183?
  all_codecs_on_empty_reinvite               ps_globals_all_codecs_on_empty_reinvite?

  @@index([id], map: "ps_globals_id")
}

model ps_inbound_publications {
  id                         String  @unique(map: "id") @db.VarChar(40)
  endpoint                   String? @db.VarChar(40)
  event_asterisk_devicestate String? @map("event_asterisk-devicestate") @db.VarChar(40)
  event_asterisk_mwi         String? @map("event_asterisk-mwi") @db.VarChar(40)

  @@index([id], map: "ps_inbound_publications_id")
}

model ps_outbound_publishes {
  id                String                            @unique(map: "id") @db.VarChar(40)
  expiration        Int?
  outbound_auth     String?                           @db.VarChar(40)
  outbound_proxy    String?                           @db.VarChar(256)
  server_uri        String?                           @db.VarChar(256)
  from_uri          String?                           @db.VarChar(256)
  to_uri            String?                           @db.VarChar(256)
  event             String?                           @db.VarChar(40)
  max_auth_attempts Int?
  transport         String?                           @db.VarChar(40)
  multi_user        ps_outbound_publishes_multi_user?
  body              String?                           @map("@body") @db.VarChar(40)
  context           String?                           @map("@context") @db.VarChar(256)
  exten             String?                           @map("@exten") @db.VarChar(256)

  @@index([id], map: "ps_outbound_publishes_id")
}

model ps_registrations {
  id                       String                                     @unique(map: "id") @db.VarChar(40)
  auth_rejection_permanent ps_registrations_auth_rejection_permanent?
  client_uri               String?                                    @db.VarChar(255)
  contact_user             String?                                    @db.VarChar(40)
  expiration               Int?
  max_retries              Int?
  outbound_auth            String?                                    @db.VarChar(40)
  outbound_proxy           String?                                    @db.VarChar(40)
  retry_interval           Int?
  forbidden_retry_interval Int?
  server_uri               String?                                    @db.VarChar(255)
  transport                String?                                    @db.VarChar(40)
  support_path             ps_registrations_support_path?
  fatal_retry_interval     Int?
  line                     ps_registrations_line?
  endpoint                 String?                                    @db.VarChar(40)
  support_outbound         ps_registrations_support_outbound?
  contact_header_params    String?                                    @db.VarChar(255)
  max_random_initial_delay Int?
  security_negotiation     ps_registrations_security_negotiation?
  security_mechanisms      String?                                    @db.VarChar(512)

  @@index([id], map: "ps_registrations_id")
}

model ps_resource_list {
  id                          String                                  @unique(map: "id") @db.VarChar(40)
  list_item                   String?                                 @db.VarChar(2048)
  event                       String?                                 @db.VarChar(40)
  full_state                  ps_resource_list_full_state?
  notification_batch_interval Int?
  resource_display_name       ps_resource_list_resource_display_name?

  @@index([id], map: "ps_resource_list_id")
}

model ps_subscription_persistence {
  id            String                                     @unique(map: "id") @db.VarChar(40)
  packet        String?                                    @db.VarChar(2048)
  src_name      String?                                    @db.VarChar(128)
  src_port      Int?
  transport_key String?                                    @db.VarChar(64)
  local_name    String?                                    @db.VarChar(128)
  local_port    Int?
  cseq          Int?
  tag           String?                                    @db.VarChar(128)
  endpoint      String?                                    @db.VarChar(40)
  expires       Int?
  contact_uri   String?                                    @db.VarChar(256)
  prune_on_boot ps_subscription_persistence_prune_on_boot?

  @@index([id], map: "ps_subscription_persistence_id")
}

model ps_systems {
  id                          String                                  @unique(map: "id") @db.VarChar(40)
  timer_t1                    Int?
  timer_b                     Int?
  compact_headers             ps_systems_compact_headers?
  threadpool_initial_size     Int?
  threadpool_auto_increment   Int?
  threadpool_idle_timeout     Int?
  threadpool_max_size         Int?
  disable_tcp_switch          ps_systems_disable_tcp_switch?
  follow_early_media_fork     ps_systems_follow_early_media_fork?
  accept_multiple_sdp_answers ps_systems_accept_multiple_sdp_answers?
  disable_rport               ps_systems_disable_rport?

  @@index([id], map: "ps_systems_id")
}

model ps_transports {
  id                         String                              @unique(map: "id") @db.VarChar(40)
  async_operations           Int?
  bind                       String?                             @db.VarChar(40)
  ca_list_file               String?                             @db.VarChar(200)
  cert_file                  String?                             @db.VarChar(200)
  cipher                     String?                             @db.VarChar(200)
  domain                     String?                             @db.VarChar(40)
  external_media_address     String?                             @db.VarChar(40)
  external_signaling_address String?                             @db.VarChar(40)
  external_signaling_port    Int?
  method                     ps_transports_method?
  local_net                  String?                             @db.VarChar(40)
  password                   String?                             @db.VarChar(40)
  priv_key_file              String?                             @db.VarChar(200)
  protocol                   ps_transports_protocol?
  require_client_cert        ps_transports_require_client_cert?
  verify_client              ps_transports_verify_client?
  verify_server              ps_transports_verify_server?
  tos                        String?                             @db.VarChar(10)
  cos                        Int?
  allow_reload               ps_transports_allow_reload?
  symmetric_transport        ps_transports_symmetric_transport?
  allow_wildcard_certs       ps_transports_allow_wildcard_certs?

  @@index([id], map: "ps_transports_id")
}

model queue_members {
  queue_name      String                   @db.VarChar(80)
  interface       String                   @db.VarChar(80)
  membername      String?                  @db.VarChar(80)
  state_interface String?                  @db.VarChar(80)
  penalty         Int?
  paused          Int?
  uniqueid        Int                      @unique(map: "uniqueid") @default(autoincrement())
  wrapuptime      Int?
  ringinuse       queue_members_ringinuse?

  @@id([queue_name, interface])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model queue_rules {
  rule_name   String @db.VarChar(80)
  time        String @db.VarChar(32)
  min_penalty String @db.VarChar(32)
  max_penalty String @db.VarChar(32)

  @@ignore
}

model queues {
  name                        String                             @id @db.VarChar(128)
  musiconhold                 String?                            @db.VarChar(128)
  announce                    String?                            @db.VarChar(128)
  context                     String?                            @db.VarChar(128)
  timeout                     Int?
  ringinuse                   queues_ringinuse?
  setinterfacevar             queues_setinterfacevar?
  setqueuevar                 queues_setqueuevar?
  setqueueentryvar            queues_setqueueentryvar?
  monitor_format              String?                            @db.VarChar(8)
  membermacro                 String?                            @db.VarChar(512)
  membergosub                 String?                            @db.VarChar(512)
  queue_youarenext            String?                            @db.VarChar(128)
  queue_thereare              String?                            @db.VarChar(128)
  queue_callswaiting          String?                            @db.VarChar(128)
  queue_quantity1             String?                            @db.VarChar(128)
  queue_quantity2             String?                            @db.VarChar(128)
  queue_holdtime              String?                            @db.VarChar(128)
  queue_minutes               String?                            @db.VarChar(128)
  queue_minute                String?                            @db.VarChar(128)
  queue_seconds               String?                            @db.VarChar(128)
  queue_thankyou              String?                            @db.VarChar(128)
  queue_callerannounce        String?                            @db.VarChar(128)
  queue_reporthold            String?                            @db.VarChar(128)
  announce_frequency          Int?
  announce_to_first_user      queues_announce_to_first_user?
  min_announce_frequency      Int?
  announce_round_seconds      Int?
  announce_holdtime           String?                            @db.VarChar(128)
  announce_position           String?                            @db.VarChar(128)
  announce_position_limit     Int?
  periodic_announce           String?                            @db.VarChar(50)
  periodic_announce_frequency Int?
  relative_periodic_announce  queues_relative_periodic_announce?
  random_periodic_announce    queues_random_periodic_announce?
  retry                       Int?
  wrapuptime                  Int?
  penaltymemberslimit         Int?
  autofill                    queues_autofill?
  monitor_type                String?                            @db.VarChar(128)
  autopause                   queues_autopause?
  autopausedelay              Int?
  autopausebusy               queues_autopausebusy?
  autopauseunavail            queues_autopauseunavail?
  maxlen                      Int?
  servicelevel                Int?
  strategy                    queues_strategy?
  joinempty                   String?                            @db.VarChar(128)
  leavewhenempty              String?                            @db.VarChar(128)
  reportholdtime              queues_reportholdtime?
  memberdelay                 Int?
  weight                      Int?
  timeoutrestart              queues_timeoutrestart?
  defaultrule                 String?                            @db.VarChar(128)
  timeoutpriority             String?                            @db.VarChar(128)
}

model sippeers {
  id                 Int                         @id @default(autoincrement())
  name               String                      @unique(map: "name") @db.VarChar(40)
  ipaddr             String?                     @db.VarChar(45)
  port               Int?
  regseconds         Int?
  defaultuser        String?                     @db.VarChar(40)
  fullcontact        String?                     @db.VarChar(80)
  regserver          String?                     @db.VarChar(20)
  useragent          String?                     @db.VarChar(255)
  lastms             Int?
  host               String?                     @db.VarChar(40)
  type               sippeers_type?
  context            String?                     @db.VarChar(40)
  permit             String?                     @db.VarChar(95)
  deny               String?                     @db.VarChar(95)
  secret             String?                     @db.VarChar(40)
  md5secret          String?                     @db.VarChar(40)
  remotesecret       String?                     @db.VarChar(40)
  transport          sippeers_transport?
  dtmfmode           sippeers_dtmfmode?
  directmedia        sippeers_directmedia?
  nat                String?                     @db.VarChar(29)
  callgroup          String?                     @db.VarChar(40)
  pickupgroup        String?                     @db.VarChar(40)
  language           String?                     @db.VarChar(40)
  disallow           String?                     @db.VarChar(200)
  allow              String?                     @db.VarChar(200)
  insecure           String?                     @db.VarChar(40)
  trustrpid          sippeers_trustrpid?
  progressinband     sippeers_progressinband?
  promiscredir       sippeers_promiscredir?
  useclientcode      sippeers_useclientcode?
  accountcode        String?                     @db.VarChar(80)
  setvar             String?                     @db.VarChar(200)
  callerid           String?                     @db.VarChar(40)
  amaflags           String?                     @db.VarChar(40)
  callcounter        sippeers_callcounter?
  busylevel          Int?
  allowoverlap       sippeers_allowoverlap?
  allowsubscribe     sippeers_allowsubscribe?
  videosupport       sippeers_videosupport?
  maxcallbitrate     Int?
  rfc2833compensate  sippeers_rfc2833compensate?
  mailbox            String?                     @db.VarChar(40)
  session_timers     sippeers_session_timers?    @map("session-timers")
  session_expires    Int?                        @map("session-expires")
  session_minse      Int?                        @map("session-minse")
  session_refresher  sippeers_session_refresher? @map("session-refresher")
  t38pt_usertpsource String?                     @db.VarChar(40)
  regexten           String?                     @db.VarChar(40)
  fromdomain         String?                     @db.VarChar(40)
  fromuser           String?                     @db.VarChar(40)
  qualify            String?                     @db.VarChar(40)
  defaultip          String?                     @db.VarChar(45)
  rtptimeout         Int?
  rtpholdtimeout     Int?
  sendrpid           sippeers_sendrpid?
  outboundproxy      String?                     @db.VarChar(40)
  callbackextension  String?                     @db.VarChar(40)
  timert1            Int?
  timerb             Int?
  qualifyfreq        Int?
  constantssrc       sippeers_constantssrc?
  contactpermit      String?                     @db.VarChar(95)
  contactdeny        String?                     @db.VarChar(95)
  usereqphone        sippeers_usereqphone?
  textsupport        sippeers_textsupport?
  faxdetect          sippeers_faxdetect?
  buggymwi           sippeers_buggymwi?
  auth               String?                     @db.VarChar(40)
  fullname           String?                     @db.VarChar(40)
  trunkname          String?                     @db.VarChar(40)
  cid_number         String?                     @db.VarChar(40)
  callingpres        sippeers_callingpres?
  mohinterpret       String?                     @db.VarChar(40)
  mohsuggest         String?                     @db.VarChar(40)
  parkinglot         String?                     @db.VarChar(40)
  hasvoicemail       sippeers_hasvoicemail?
  subscribemwi       sippeers_subscribemwi?
  vmexten            String?                     @db.VarChar(40)
  autoframing        sippeers_autoframing?
  rtpkeepalive       Int?
  call_limit         Int?                        @map("call-limit")
  g726nonstandard    sippeers_g726nonstandard?
  ignoresdpversion   sippeers_ignoresdpversion?
  allowtransfer      sippeers_allowtransfer?
  dynamic            sippeers_dynamic?
  path               String?                     @db.VarChar(256)
  supportpath        sippeers_supportpath?

  @@index([host, port], map: "sippeers_host_port")
  @@index([ipaddr, port], map: "sippeers_ipaddr_port")
  @@index([name], map: "sippeers_name")
  @@index([name, host], map: "sippeers_name_host")
}

model voicemail {
  uniqueid        Int                        @id @default(autoincrement())
  context         String                     @db.VarChar(80)
  mailbox         String                     @db.VarChar(80)
  password        String                     @db.VarChar(80)
  fullname        String?                    @db.VarChar(80)
  alias           String?                    @db.VarChar(80)
  email           String?                    @db.VarChar(80)
  pager           String?                    @db.VarChar(80)
  attach          voicemail_attach?
  attachfmt       String?                    @db.VarChar(10)
  serveremail     String?                    @db.VarChar(80)
  language        String?                    @db.VarChar(20)
  tz              String?                    @db.VarChar(30)
  deletevoicemail voicemail_deletevoicemail?
  saycid          voicemail_saycid?
  sendvoicemail   voicemail_sendvoicemail?
  review          voicemail_review?
  tempgreetwarn   voicemail_tempgreetwarn?
  operator        voicemail_operator?
  envelope        voicemail_envelope?
  sayduration     Int?
  forcename       voicemail_forcename?
  forcegreetings  voicemail_forcegreetings?
  callback        String?                    @db.VarChar(80)
  dialout         String?                    @db.VarChar(80)
  exitcontext     String?                    @db.VarChar(80)
  maxmsg          Int?
  volgain         Decimal?                   @db.Decimal(5, 2)
  imapuser        String?                    @db.VarChar(80)
  imappassword    String?                    @db.VarChar(80)
  imapserver      String?                    @db.VarChar(80)
  imapport        String?                    @db.VarChar(8)
  imapflags       String?                    @db.VarChar(80)
  stamp           DateTime?                  @db.DateTime(0)

  @@index([context], map: "voicemail_context")
  @@index([imapuser], map: "voicemail_imapuser")
  @@index([mailbox], map: "voicemail_mailbox")
  @@index([mailbox, context], map: "voicemail_mailbox_context")
}

enum musiconhold_mode {
  custom
  files
  mp3nb
  quietmp3nb
  quietmp3
  playlist
}

enum ps_auths_auth_type {
  md5
  userpass
  google_oauth
}

enum ps_registrations_auth_rejection_permanent {
  yes
  no
}

enum iaxfriends_type {
  friend
  user
  peer
}

enum ps_asterisk_publications_device_state {
  yes
  no
}

enum ps_endpoint_id_ips_srv_lookups {
  yes
  no
}

enum ps_resource_list_full_state {
  yes
  no
}

enum ps_systems_compact_headers {
  yes
  no
}

enum ps_asterisk_publications_mailbox_state {
  yes
  no
}

enum queues_ringinuse {
  yes
  no
}

enum ps_aors_remove_existing {
  yes
  no
}

enum queues_setinterfacevar {
  yes
  no
}

enum ps_endpoints_direct_media {
  yes
  no
}

enum queues_setqueuevar {
  yes
  no
}

enum ps_aors_authenticate_qualify {
  yes
  no
}

enum ps_endpoints_connected_line_method {
  invite
  reinvite
  update
}

enum ps_systems_disable_tcp_switch {
  yes
  no
}

enum queues_setqueueentryvar {
  yes
  no
}

enum voicemail_attach {
  yes
  no
}

enum ps_contacts_authenticate_qualify {
  yes
  no
}

enum ps_endpoints_direct_media_method {
  invite
  reinvite
  update
}

enum ps_systems_follow_early_media_fork {
  yes
  no
}

enum ps_endpoints_direct_media_glare_mitigation {
  none
  outgoing
  incoming
}

enum ps_outbound_publishes_multi_user {
  yes
  no
}

enum ps_systems_accept_multiple_sdp_answers {
  yes
  no
}

enum ps_transports_method {
  default
  unspecified
  tlsv1
  sslv2
  sslv3
  sslv23
}

enum ps_aors_support_path {
  yes
  no
}

enum ps_endpoints_disable_direct_media_on_nat {
  yes
  no
}

enum sippeers_type {
  friend
  user
  peer
}

enum ps_endpoints_dtmf_mode {
  rfc4733
  inband
  info
  auto
  auto_info
}

enum ps_globals_disable_multi_domain {
  yes
  no
}

enum ps_registrations_support_path {
  yes
  no
}

enum ps_subscription_persistence_prune_on_boot {
  yes
  no
}

enum voicemail_deletevoicemail {
  yes
  no
}

enum ps_contacts_prune_on_boot {
  yes
  no
}

enum ps_endpoints_force_rport {
  yes
  no
}

enum ps_registrations_line {
  yes
  no
}

enum ps_transports_protocol {
  udp
  tcp
  tls
  ws
  wss
  flow
}

enum voicemail_saycid {
  yes
  no
}

enum ps_endpoints_ice_support {
  yes
  no
}

enum ps_transports_require_client_cert {
  yes
  no
}

enum voicemail_sendvoicemail {
  yes
  no
}

enum ps_transports_verify_client {
  yes
  no
}

enum voicemail_review {
  yes
  no
}

enum ps_transports_verify_server {
  yes
  no
}

enum voicemail_tempgreetwarn {
  yes
  no
}

enum voicemail_operator {
  yes
  no
}

enum ps_globals_mwi_disable_initial_unsolicited {
  yes
  no
}

enum ps_registrations_security_negotiation {
  no
  mediasec
}

enum sippeers_dtmfmode {
  rfc2833
  info
  shortinfo
  inband
  auto
}

enum voicemail_envelope {
  yes
  no
}

enum ps_globals_ignore_uri_user_options {
  yes
  no
}

enum ps_transports_allow_reload {
  yes
  no
}

enum sippeers_directmedia {
  yes
  no
  nonat
  update
  outgoing
}

enum ps_endpoints_rewrite_contact {
  yes
  no
}

enum ps_transports_symmetric_transport {
  yes
  no
}

enum voicemail_forcename {
  yes
  no
}

enum ps_endpoints_rtp_ipv6 {
  yes
  no
}

enum ps_transports_allow_wildcard_certs {
  yes
  no
}

enum voicemail_forcegreetings {
  yes
  no
}

enum ps_endpoints_rtp_symmetric {
  yes
  no
}

enum ps_globals_taskprocessor_overload_trigger {
  none
  global
  pjsip_only
}

enum ps_endpoints_send_diversion {
  yes
  no
}

enum iaxfriends_sendani {
  yes
  no
}

enum ps_endpoints_send_pai {
  yes
  no
}

enum queues_announce_to_first_user {
  yes
  no
}

enum ps_endpoints_send_rpid {
  yes
  no
}

enum iaxfriends_trunk {
  yes
  no
}

enum ps_endpoints_timers {
  forced
  no
  required
  yes
}

enum sippeers_trustrpid {
  yes
  no
}

enum sippeers_progressinband {
  yes
  no
  never
}

enum iaxfriends_requirecalltoken {
  yes
  no
  auto
}

enum sippeers_promiscredir {
  yes
  no
}

enum iaxfriends_encryption {
  yes
  no
  aes128
}

enum ps_endpoints_callerid_privacy {
  allowed_not_screened
  allowed_passed_screened
  allowed_failed_screened
  allowed
  prohib_not_screened
  prohib_passed_screened
  prohib_failed_screened
  prohib
  unavailable
}

enum sippeers_useclientcode {
  yes
  no
}

enum iaxfriends_transfer {
  yes
  no
  mediaonly
}

enum iaxfriends_jitterbuffer {
  yes
  no
}

enum ps_endpoints_100rel {
  no
  required
  peer_supported
  yes
}

enum queues_relative_periodic_announce {
  yes
  no
}

enum iaxfriends_forcejitterbuffer {
  yes
  no
}

enum ps_endpoints_aggregate_mwi {
  yes
  no
}

enum queues_random_periodic_announce {
  yes
  no
}

enum ps_endpoints_trust_id_inbound {
  yes
  no
}

enum ps_endpoints_trust_id_outbound {
  yes
  no
}

enum sippeers_callcounter {
  yes
  no
}

enum ps_endpoints_use_ptime {
  yes
  no
}

enum ps_endpoints_use_avpf {
  yes
  no
}

enum queues_autofill {
  yes
  no
}

enum sippeers_allowoverlap {
  yes
  no
}

enum iaxfriends_qualifysmoothing {
  yes
  no
}

enum ps_endpoints_media_encryption {
  no
  sdes
  dtls
}

enum sippeers_allowsubscribe {
  yes
  no
}

enum ps_endpoints_inband_progress {
  yes
  no
}

enum queues_autopause {
  yes
  no
  all
}

enum sippeers_videosupport {
  yes
  no
}

enum queues_autopausebusy {
  yes
  no
}

enum sippeers_rfc2833compensate {
  yes
  no
}

enum iaxfriends_adsi {
  yes
  no
}

enum queues_autopauseunavail {
  yes
  no
}

enum sippeers_session_timers {
  accept
  refuse
  originate

  @@map("sippeers_session-timers")
}

enum ps_endpoints_fax_detect {
  yes
  no
}

enum queues_strategy {
  ringall
  leastrecent
  fewestcalls
  random
  rrmemory
  linear
  wrandom
  rrordered
}

enum ps_endpoints_t38_udptl {
  yes
  no
}

enum sippeers_session_refresher {
  uac
  uas

  @@map("sippeers_session-refresher")
}

enum ps_endpoints_t38_udptl_ec {
  none
  fec
  redundancy
}

enum queues_reportholdtime {
  yes
  no
}

enum ps_endpoints_t38_udptl_nat {
  yes
  no
}

enum ps_endpoints_t38_udptl_ipv6 {
  yes
  no
}

enum queues_timeoutrestart {
  yes
  no
}

enum ps_endpoints_one_touch_recording {
  yes
  no
}

enum sippeers_sendrpid {
  yes
  no
}

enum ps_endpoints_allow_transfer {
  yes
  no
}

enum ps_endpoints_allow_subscribe {
  yes
  no
}

enum sippeers_constantssrc {
  yes
  no
}

enum sippeers_usereqphone {
  yes
  no
}

enum sippeers_textsupport {
  yes
  no
}

enum sippeers_faxdetect {
  yes
  no
}

enum sippeers_buggymwi {
  yes
  no
}

enum sippeers_callingpres {
  allowed_not_screened
  allowed_passed_screen
  allowed_failed_screen
  allowed
  prohib_not_screened
  prohib_passed_screen
  prohib_failed_screen
  prohib
}

enum ps_endpoints_dtls_setup {
  active
  passive
  actpass
}

enum ps_endpoints_srtp_tag_32 {
  yes
  no
}

enum sippeers_hasvoicemail {
  yes
  no
}

enum ps_endpoints_redirect_method {
  user
  uri_core
  uri_pjsip
}

enum sippeers_subscribemwi {
  yes
  no
}

enum sippeers_autoframing {
  yes
  no
}

enum ps_endpoints_force_avp {
  yes
  no
}

enum sippeers_g726nonstandard {
  yes
  no
}

enum ps_endpoints_media_use_received_transport {
  yes
  no
}

enum sippeers_ignoresdpversion {
  yes
  no
}

enum sippeers_allowtransfer {
  yes
  no
}

enum ps_endpoints_user_eq_phone {
  yes
  no
}

enum sippeers_dynamic {
  yes
  no
}

enum ps_endpoints_moh_passthrough {
  yes
  no
}

enum ps_endpoints_media_encryption_optimistic {
  yes
  no
}

enum sippeers_supportpath {
  yes
  no
}

enum ps_endpoints_rpid_immediate {
  yes
  no
}

enum ps_endpoints_g726_non_standard {
  yes
  no
}

enum ps_endpoints_bind_rtp_to_media_address {
  yes
  no
}

enum ps_endpoints_preferred_codec_only {
  yes
  no
}

enum ps_endpoints_asymmetric_rtp_codec {
  yes
  no
}

enum ps_endpoints_rtcp_mux {
  yes
  no
}

enum ps_endpoints_allow_overlap {
  yes
  no
}

enum ps_endpoints_refer_blind_progress {
  yes
  no
}

enum ps_endpoints_notify_early_inuse_ringing {
  yes
  no
}

enum ps_endpoints_webrtc {
  yes
  no
}

enum ps_endpoints_dtls_fingerprint {
  SHA_1   @map("SHA-1")
  SHA_256 @map("SHA-256")
}

enum ps_endpoints_bundle {
  yes
  no
}

enum ps_endpoints_dtls_auto_generate_cert {
  yes
  no
}

enum ps_endpoints_follow_early_media_fork {
  yes
  no
}

enum ps_endpoints_accept_multiple_sdp_answers {
  yes
  no
}

enum ps_endpoints_suppress_q850_reason_headers {
  yes
  no
}

enum ps_endpoints_incoming_call_offer_pref {
  local
  local_first
  remote
  remote_first
}

enum ps_endpoints_outgoing_call_offer_pref {
  local
  local_merge
  local_first
  remote
  remote_merge
  remote_first
}

enum ps_endpoints_security_negotiation {
  no
  mediasec
}

enum ps_resource_list_resource_display_name {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum queue_members_ringinuse {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_systems_disable_rport {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_aors_remove_unavailable {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_registrations_support_outbound {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum sippeers_transport {
  udp
  tcp
  tls
  ws
  wss
}

enum ps_globals_use_callerid_contact {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_globals_send_contact_status_on_update_registration {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_globals_norefersub {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_globals_allow_sending_180_after_183 {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_globals_all_codecs_on_empty_reinvite {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_mwi_subscribe_replaces_unsolicited {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_trust_connected_line {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_send_connected_line {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_ignore_183_without_sdp {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_stir_shaken {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_send_history_info {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_allow_unauthenticated_options {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_t38_bind_udptl_to_media_address {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}

enum ps_endpoints_send_aoc {
  // 0 @map("0")
  // 1 @map("1")
  off
  on
  false
  true
  no
  yes
}
