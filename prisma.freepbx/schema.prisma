generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  variable String @id @default("") @db.VarChar(20)
  value    String @default("") @db.VarChar(80)
}

model ampusers {
  username       String  @id @db.VarChar(190)
  password_sha1  String  @db.VarChar(40)
  extension_low  String  @default("") @db.VarChar(20)
  extension_high String  @default("") @db.VarChar(20)
  deptname       String  @default("") @db.VarChar(20)
  sections       Bytes
  email          String? @default("") @db.VarChar(40)
  extension      String? @default("") @db.VarChar(40)
}

model callrecording {
  callrecording_id   Int     @id @default(autoincrement())
  callrecording_mode String? @db.VarChar(50)
  description        String? @db.VarChar(50)
  dest               String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model callrecording_module {
  extension     String? @db.VarChar(50)
  cidnum        String? @default("") @db.VarChar(50)
  callrecording String? @db.VarChar(10)
  display       String? @db.VarChar(20)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cdr {
  calldate      DateTime @default(dbgenerated("('1000-01-01 00:00:00')")) @db.DateTime(0)
  clid          String   @default("") @db.VarChar(80)
  src           String   @default("") @db.VarChar(80)
  dst           String   @default("") @db.VarChar(80)
  dcontext      String   @default("") @db.VarChar(80)
  channel       String   @default("") @db.VarChar(80)
  dstchannel    String   @default("") @db.VarChar(80)
  lastapp       String   @default("") @db.VarChar(80)
  lastdata      String   @default("") @db.VarChar(80)
  duration      Int      @default(0)
  billsec       Int      @default(0)
  disposition   String   @default("") @db.VarChar(45)
  amaflags      Int      @default(0)
  accountcode   String   @default("") @db.VarChar(20)
  uniqueid      String   @default("") @db.VarChar(32)
  userfield     String   @default("") @db.VarChar(255)
  did           String   @default("") @db.VarChar(50)
  recordingfile String   @default("") @db.VarChar(255)
  cnum          String   @default("") @db.VarChar(80)
  cnam          String   @default("") @db.VarChar(80)
  outbound_cnum String   @default("") @db.VarChar(80)
  outbound_cnam String   @default("") @db.VarChar(80)
  dst_cnam      String   @default("") @db.VarChar(80)
  linkedid      String   @default("") @db.VarChar(32)
  peeraccount   String   @default("") @db.VarChar(80)
  sequence      Int      @default(0)

  @@index([accountcode], map: "accountcode")
  @@index([calldate], map: "calldate")
  @@index([did], map: "did")
  @@index([dst], map: "dst")
  @@index([recordingfile], map: "recordingfile")
  @@index([uniqueid], map: "uniqueid")
  @@ignore
}

model certman_cas {
  uid        Int     @id @default(autoincrement())
  basename   String  @unique(map: "basename") @db.VarChar(190)
  cn         String  @db.VarChar(255)
  on         String  @db.VarChar(255)
  passphrase String? @db.VarChar(255)
  salt       String? @db.VarChar(255)
}

model certman_certs {
  cid         Int     @id @default(autoincrement())
  caid        Int?
  basename    String  @unique(map: "basename") @db.VarChar(190)
  description String? @db.VarChar(255)
  type        String  @default("ss") @db.VarChar(2)
  default     Boolean @default(false)
  additional  Bytes?
}

model certman_csrs {
  cid      Int    @id @default(autoincrement())
  basename String @unique(map: "basename") @db.VarChar(190)
}

model certman_mapping {
  id                 String  @id @db.VarChar(20)
  cid                Int?
  verify             String? @db.VarChar(255)
  setup              String? @db.VarChar(45)
  rekey              Int?
  auto_generate_cert Boolean @default(false)
}

model cron_jobs {
  id              Int     @id @default(autoincrement()) @db.UnsignedInt
  modulename      String  @default("") @db.VarChar(170)
  jobname         String  @default("") @db.VarChar(170)
  command         String? @db.LongText
  class           String? @default("") @db.VarChar(255)
  schedule        String  @default("") @db.VarChar(255)
  max_runtime     Int     @default(30)
  enabled         Boolean @default(true)
  execution_order Int     @default(100)

  @@unique([modulename, jobname], map: "modulename")
}

model cronmanager {
  module   String  @default("") @db.VarChar(50)
  id       String  @default("") @db.VarChar(24)
  time     String? @db.VarChar(5)
  freq     Int     @default(0)
  lasttime Int     @default(0)
  command  String  @default("") @db.VarChar(255)

  @@id([module, id])
}

model dahdi {
  id      String @default("-1") @db.VarChar(20)
  keyword String @default("") @db.VarChar(30)
  data    String @default("") @db.VarChar(255)
  flags   Int    @default(0)

  @@id([id, keyword])
}

model dahdichandids {
  channel     Int    @id @default(0)
  description String @default("") @db.VarChar(40)
  did         String @default("") @db.VarChar(60)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model devices {
  id            String  @default("") @db.VarChar(20)
  tech          String  @default("") @db.VarChar(10)
  dial          String  @default("") @db.VarChar(255)
  devicetype    String  @default("") @db.VarChar(5)
  user          String? @db.VarChar(50)
  description   String? @db.VarChar(50)
  emergency_cid String? @db.VarChar(100)
  hint_override String? @db.VarChar(100)

  @@index([id], map: "id")
  @@index([tech], map: "tech")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model emergencydevices {
  id            String  @db.VarChar(20)
  tech          String  @db.VarChar(10)
  dial          String  @db.VarChar(255)
  devicetype    String? @db.VarChar(10)
  user          String? @db.VarChar(50)
  description   String? @db.VarChar(100)
  emergency_cid String? @db.VarChar(100)
  hint_override String? @db.VarChar(100)

  @@ignore
}

model featurecodes {
  modulename  String  @default("") @db.VarChar(50)
  featurename String  @default("") @db.VarChar(50)
  description String  @default("") @db.VarChar(200)
  helptext    String? @db.VarChar(10000)
  defaultcode String? @db.VarChar(20)
  customcode  String? @db.VarChar(20)
  enabled     Boolean @default(false)
  providedest Boolean @default(false)

  @@id([modulename, featurename])
  @@index([enabled], map: "enabled")
}

model fop2ButtonContext {
  id_button  Int  @id
  id_context Int?
}

model fop2GroupButton {
  id         Int     @id @default(autoincrement())
  context_id Int
  group_name String? @db.VarChar(50)
  id_button  Int
}

model fop2PermGroup {
  id         Int     @id @default(autoincrement())
  context_id Int
  name       String? @db.VarChar(30)
  id_group   Int?
  name_group String? @db.VarChar(100)
}

model fop2UserContext {
  id_user    Int  @id
  id_context Int?
}

model fop2UserGroup {
  id         Int    @id @default(autoincrement())
  context_id Int
  exten      String @db.VarChar(30)
  id_group   Int

  @@unique([exten, id_group, context_id], map: "uni")
}

model fop2UserPlugin {
  id         Int     @id @default(autoincrement())
  context_id Int
  exten      String? @db.VarChar(30)
  id_plugin  String? @db.VarChar(50)

  @@unique([exten, id_plugin], map: "uni")
}

model fop2UserTemplate {
  id          Int    @id @default(autoincrement())
  context_id  Int
  exten       String @db.VarChar(30)
  id_template Int

  @@unique([exten, id_template], map: "uni")
}

model fop2buttons {
  id                 Int     @id @default(autoincrement())
  context_id         Int
  exclude            Int     @default(0)
  sortorder          Int     @default(0)
  type               String  @db.VarChar(40)
  device             String  @db.VarChar(100)
  privacy            String? @db.VarChar(30)
  label              String? @db.VarChar(100)
  group              String  @default("") @db.VarChar(60)
  exten              String? @db.VarChar(30)
  email              String  @default("") @db.VarChar(100)
  context            String? @db.VarChar(100)
  mailbox            String? @db.VarChar(100)
  channel            String? @default("") @db.VarChar(200)
  queuechannel       String? @db.Text
  originatechannel   String? @default("") @db.VarChar(200)
  customastdb        String? @default("") @db.VarChar(50)
  spyoptions         String? @default("") @db.VarChar(100)
  external           String? @default("") @db.VarChar(100)
  accountcode        String? @default("") @db.VarChar(100)
  tags               String? @default("") @db.VarChar(255)
  extenvoicemail     String  @default("") @db.VarChar(200)
  queuecontext       String  @default("") @db.VarChar(200)
  server             String  @default("") @db.VarChar(100)
  cssclass           String  @default("") @db.VarChar(200)
  originatevariables String? @db.Text
  autoanswerheader   String? @default("__SIPADDHEADER51=Call-Info: answer-after=0.001") @db.VarChar(255)
  sip_username       String? @default("") @db.VarChar(255)
  sip_password       String? @default("") @db.VarChar(255)

  @@unique([context_id, device], map: "devname")
}

model fop2contexts {
  id      Int     @id @default(autoincrement())
  context String? @unique(map: "ctx") @db.VarChar(50)
  name    String? @db.VarChar(100)
  exclude Int     @default(0)
}

model fop2groups {
  id         Int    @default(0)
  context_id Int
  name       String @db.VarChar(50)

  @@unique([context_id, name], map: "contextname")
  @@unique([id, context_id], map: "idcont")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model fop2managerUserContext {
  id_user    Int
  id_context Int?

  @@index([id_context], map: "te")
  @@index([id_user], map: "us")
  @@index([id_user, id_context], map: "uste")
  @@ignore
}

model fop2manageracl {
  id       Int     @id @default(autoincrement())
  resource String? @unique(map: "byresource") @db.VarChar(50)
  level    String? @db.VarChar(30)
}

model fop2managersecurelevel {
  level  Int     @id @default(0)
  detail String? @unique(map: "det") @db.VarChar(30)
  icon   String? @db.VarChar(50)
}

model fop2managerusers {
  id       Int     @id @default(autoincrement())
  user     String? @unique(map: "name") @db.VarChar(50)
  password String? @db.VarChar(100)
  level    String? @db.VarChar(30)
}

model fop2permissions {
  id          Int     @id @default(autoincrement())
  context_id  Int
  name        String? @db.VarChar(30)
  permissions String? @db.VarChar(200)
}

model fop2plugins {
  id          Int     @id @default(autoincrement())
  rawname     String? @unique(map: "rname") @db.VarChar(50)
  name        String? @db.VarChar(100)
  version     String? @db.VarChar(10)
  description String? @db.Text
  global      Int?    @default(0)
}

model fop2recordings {
  id              Int       @id @default(autoincrement())
  uniqueid        String?   @unique(map: "uni") @db.VarChar(50)
  datetime        DateTime? @db.DateTime(0)
  ownerextension  String?   @db.VarChar(20)
  targetextension String?   @db.VarChar(20)
  filename        String?   @db.TinyText
  duration        Int?      @default(0)
  context         String?   @db.VarChar(200)
}

model fop2settings {
  id      Int    @id @default(autoincrement())
  keyword String @unique(map: "kw") @db.VarChar(250)
  value   String @db.Text
}

model fop2setup {
  id        Int     @id @default(autoincrement())
  keyword   String  @db.VarChar(150)
  parameter String? @default("") @db.VarChar(150)
  value     String? @default("") @db.VarChar(150)

  @@unique([keyword, parameter], map: "keypar")
}

model fop2templates {
  id          Int     @id @default(autoincrement())
  context_id  Int
  name        String? @db.VarChar(30)
  permissions String? @db.VarChar(200)
  groups      String? @db.VarChar(200)
  plugins     String? @db.VarChar(200)
  custom      String? @db.Text
  isdefault   Int?    @default(0)
}

model fop2users {
  id          Int     @id @default(autoincrement())
  context_id  Int
  exten       String  @db.VarChar(30)
  secret      String  @db.VarChar(20)
  permissions String? @db.VarChar(200)

  @@unique([exten, context_id], map: "extctx")
}

model freepbx_log {
  id      Int      @id @default(autoincrement())
  time    DateTime @db.DateTime(0)
  section String?  @db.VarChar(50)
  level   String   @default("error") @db.VarChar(150)
  status  Int      @default(0)
  message String   @db.LongText

  @@index([time, level], map: "time")
}

model freepbx_settings {
  keyword     String   @id @default("") @db.VarChar(50)
  value       String?  @db.VarChar(255)
  name        String?  @db.VarChar(80)
  level       Boolean? @default(false)
  description String?  @db.LongText
  type        String?  @db.VarChar(25)
  options     String?  @db.LongText
  defaultval  String?  @db.VarChar(255)
  readonly    Boolean? @default(false)
  hidden      Boolean? @default(false)
  category    String?  @db.VarChar(50)
  module      String?  @db.VarChar(50)
  emptyok     Boolean? @default(true)
  sortorder   Int?     @default(0)
}

model globals {
  variable String @id @db.VarChar(190)
  value    String @db.VarChar(255)
}

model iax {
  id      String @default("-1") @db.VarChar(20)
  keyword String @default("") @db.VarChar(30)
  data    String @db.VarChar(255)
  flags   Int    @default(0)

  @@id([id, keyword])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model incoming {
  cidnum          String?  @db.VarChar(50)
  extension       String   @db.VarChar(50)
  destination     String?  @db.VarChar(50)
  privacyman      Boolean?
  alertinfo       String?  @db.VarChar(255)
  ringing         String?  @db.VarChar(20)
  fanswer         String?  @db.VarChar(20)
  mohclass        String   @default("default") @db.VarChar(80)
  description     String?  @db.VarChar(80)
  grppre          String?  @db.VarChar(80)
  delay_answer    Int?
  pricid          String?  @db.VarChar(20)
  pmmaxretries    String?  @db.VarChar(2)
  pmminlength     String?  @db.VarChar(2)
  reversal        String?  @db.VarChar(10)
  rvolume         String?  @default("") @db.VarChar(2)
  indication_zone String?  @default("default") @db.VarChar(20)

  @@ignore
}

model indications_zonelist {
  iso  String @id @db.VarChar(20)
  name String @db.VarChar(80)
  conf Bytes?
}

model kvblobstore {
  uuid    String  @id @db.Char(36)
  type    String? @db.Char(32)
  content Bytes?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_Dashboard {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_Framework {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_Hooks {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_Media {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_modules_Cdr {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_modules_Conferences {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_modules_Core {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_modules_Filestore {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_modules_Userman {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_FreePBX_modules_Voicemail {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_OOBE {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model kvstore_Sipsettings {
  key  String  @db.Char(255)
  val  String? @db.VarChar(4096)
  type String? @db.Char(16)
  id   String? @db.Char(255)

  @@unique([key(length: 190), id(length: 190)], map: "uniqueindex")
  @@index([id(length: 190)], map: "idindex")
  @@index([key(length: 190)], map: "keyindex")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model language_incoming {
  extension String? @db.VarChar(50)
  cidnum    String? @db.VarChar(50)
  language  String? @db.VarChar(10)

  @@ignore
}

model languages {
  language_id Int     @id @default(autoincrement())
  lang_code   String? @db.VarChar(50)
  description String? @db.VarChar(50)
  dest        String? @db.VarChar(255)
}

model logfile_logfiles {
  name      String  @id @default("") @db.VarChar(25)
  permanent Boolean @default(false)
  readonly  Boolean @default(false)
  disabled  Boolean @default(false)
  debug     String? @db.VarChar(25)
  dtmf      String? @db.VarChar(25)
  error     String? @db.VarChar(25)
  fax       String? @db.VarChar(25)
  notice    String? @db.VarChar(25)
  verbose   String? @db.VarChar(25)
  warning   String? @db.VarChar(25)
  security  String? @db.VarChar(25)
}

model logfile_settings {
  key   String  @id @default("") @db.VarChar(100)
  value String? @db.VarChar(255)
}

model meetme {
  exten       String  @id @db.VarChar(50)
  options     String? @db.VarChar(15)
  userpin     String? @db.VarChar(50)
  adminpin    String? @db.VarChar(50)
  description String? @db.VarChar(50)
  joinmsg_id  Int?
  music       String? @db.VarChar(80)
  users       Int?    @default(0) @db.UnsignedSmallInt
  language    String  @default("") @db.VarChar(10)
  timeout     Int?    @default(21600) @db.UnsignedInt
}

model module_xml {
  id   String @id @default("xml") @db.VarChar(20)
  time Int    @default(0)
  data Bytes?
}

model modules {
  id         Int     @id @default(autoincrement())
  modulename String  @default("") @db.VarChar(50)
  version    String  @default("") @db.VarChar(20)
  enabled    Boolean @default(false)
  signature  Bytes?
}

model music {
  id          Int      @id @default(autoincrement())
  category    String?  @unique(map: "category_UNIQUE") @db.VarChar(190)
  type        String?  @db.VarChar(100)
  random      Boolean? @default(false)
  application String?  @db.VarChar(255)
  format      String?  @db.VarChar(10)
}

model notifications {
  module        String  @default("") @db.VarChar(50)
  id            String  @default("") @db.VarChar(24)
  level         Int     @default(0)
  display_text  String  @default("") @db.VarChar(255)
  extended_text Bytes
  link          String  @default("") @db.VarChar(255)
  reset         Boolean @default(false)
  candelete     Boolean @default(false)
  timestamp     Int     @default(0)

  @@id([module, id])
}

model outbound_route_email {
  route_id     Int     @id
  emailfrom    String? @default("") @db.VarChar(320)
  emailto      String? @default("") @db.VarChar(320)
  emailsubject String? @db.LongText
  emailbody    String? @db.LongText
}

model outbound_route_patterns {
  route_id             Int
  match_pattern_prefix String @default("") @db.VarChar(60)
  match_pattern_pass   String @default("") @db.VarChar(60)
  match_cid            String @default("") @db.VarChar(60)
  prepend_digits       String @default("") @db.VarChar(100)

  @@id([route_id, match_pattern_prefix, match_pattern_pass, match_cid, prepend_digits])
}

model outbound_route_sequence {
  route_id Int
  seq      Int

  @@id([route_id, seq])
}

model outbound_route_trunks {
  route_id Int
  trunk_id Int
  seq      Int

  @@id([route_id, trunk_id, seq])
}

model outbound_routes {
  route_id           Int     @id @default(autoincrement())
  name               String? @db.VarChar(40)
  outcid             String? @db.VarChar(255)
  outcid_mode        String? @db.VarChar(20)
  password           String? @db.VarChar(30)
  emergency_route    String? @db.VarChar(4)
  intracompany_route String? @db.VarChar(4)
  mohclass           String? @db.VarChar(80)
  time_group_id      Int?
  dest               String? @db.VarChar(255)
  time_mode          String? @default("") @db.VarChar(20)
  calendar_id        String? @db.VarChar(255)
  calendar_group_id  String? @db.VarChar(255)
  timezone           String? @db.VarChar(255)
  notification_on    String? @default("call") @db.VarChar(255)
}

model pjsip {
  id      String @default("-1") @db.VarChar(20)
  keyword String @default("") @db.VarChar(30)
  data    String @db.VarChar(8100)
  flags   Int    @default(0)

  @@id([id, keyword])
}

model recordings {
  id          Int      @id @default(autoincrement())
  displayname String?  @db.VarChar(50)
  filename    Bytes?
  description String?  @db.VarChar(254)
  fcode       Boolean? @default(false)
  fcode_pass  String?  @db.VarChar(20)
  fcode_lang  String?  @db.VarChar(20)
}

model sip {
  id      String @default("-1") @db.VarChar(20)
  keyword String @default("") @db.VarChar(30)
  data    String @db.VarChar(8100)
  flags   Int    @default(0)

  @@id([id, keyword])
}

model sipsettings {
  keyword String  @default("") @db.VarChar(50)
  seq     Boolean @default(false)
  type    Boolean @default(false)
  data    String  @default("") @db.VarChar(255)

  @@id([keyword, seq, type])
}

model soundlang_customlangs {
  id          Int    @id @default(autoincrement())
  language    String @db.VarChar(20)
  description String @db.VarChar(80)
}

model soundlang_packages {
  id         BigInt  @id @unique(map: "id") @default(autoincrement())
  type       String  @db.VarChar(20)
  module     String  @db.VarChar(80)
  language   String  @db.VarChar(20)
  license    Bytes?
  author     String? @db.VarChar(80)
  authorlink String? @db.VarChar(256)
  format     String  @db.VarChar(20)
  version    String? @db.VarChar(20)
  installed  String? @db.VarChar(20)

  @@unique([type, module, language, format], map: "unique")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model soundlang_prompts {
  type     String  @db.VarChar(20)
  module   String  @db.VarChar(80)
  language String  @db.VarChar(20)
  format   String  @db.VarChar(20)
  filename String? @db.VarChar(120)

  @@ignore
}

model soundlang_settings {
  keyword String @id @db.VarChar(20)
  value   String @db.VarChar(80)
}

model trunk_dialpatterns {
  trunkid              Int    @default(0)
  match_pattern_prefix String @default("") @db.VarChar(50)
  match_pattern_pass   String @default("") @db.VarChar(50)
  prepend_digits       String @default("") @db.VarChar(50)
  seq                  Int    @default(0)

  @@id([trunkid, match_pattern_prefix, match_pattern_pass, prepend_digits, seq])
}

model trunks {
  trunkid       Int     @default(0)
  tech          String  @db.VarChar(20)
  channelid     String  @default("") @db.VarChar(190)
  name          String  @default("") @db.VarChar(50)
  outcid        String  @default("") @db.VarChar(40)
  keepcid       String? @default("off") @db.VarChar(4)
  maxchans      String? @default("") @db.VarChar(6)
  failscript    String  @default("") @db.VarChar(255)
  dialoutprefix String  @default("") @db.VarChar(255)
  usercontext   String? @db.VarChar(255)
  provider      String? @db.VarChar(40)
  disabled      String? @default("off") @db.VarChar(4)
  continue      String? @default("off") @db.VarChar(4)
  routedisplay  String? @default("on") @db.VarChar(4)

  @@id([trunkid, tech, channelid])
}

model ucp_sessions {
  session  String  @id @unique(map: "session_UNIQUE") @db.VarChar(190)
  uid      Int?
  address  String? @db.VarChar(255)
  time     Int?
  socketid String? @db.VarChar(255)
}

model userman_call_activity_groups {
  id          Int     @id @default(autoincrement())
  groupname   String? @db.VarChar(150)
  description String? @db.VarChar(255)
}

model userman_call_activity_users {
  id         Int    @id @default(autoincrement())
  uid        String @default("") @db.VarChar(40)
  act_grp_id String @default("") @db.VarChar(40)

  @@unique([uid, act_grp_id], map: "call_act_gid_uid_unique")
  @@index([act_grp_id], map: "call_act_gid_idx")
  @@index([uid], map: "call_act_uid_idx")
}

model userman_directories {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(250)
  driver  String  @default("") @db.VarChar(150)
  active  Boolean @default(false)
  order   Int     @default(5)
  default Boolean @default(false)
  locked  Boolean @default(false)
}

model userman_groups {
  id             Int     @id @default(autoincrement())
  auth           String? @default("freepbx") @db.VarChar(150)
  authid         String? @db.VarChar(750)
  groupname      String? @db.VarChar(150)
  description    String? @db.VarChar(255)
  language       String? @db.VarChar(100)
  timezone       String? @db.VarChar(100)
  dateformat     String? @db.VarChar(100)
  timeformat     String? @db.VarChar(100)
  datetimeformat String? @db.VarChar(100)
  priority       Int     @default(5)
  users          Bytes?
  permissions    Bytes?
  local          Int     @default(0)

  @@unique([groupname, auth], map: "groupname_UNIQUE")
}

model userman_groups_settings {
  gid    Int
  module String  @db.VarChar(65)
  key    String  @db.VarChar(190)
  val    Bytes
  type   String? @db.VarChar(16)

  @@unique([gid, module, key], map: "index4")
  @@index([gid, key], map: "index2")
  @@index([module, gid], map: "index6")
}

model userman_template_settings {
  tid    Int
  module String  @db.VarChar(65)
  key    String  @db.VarChar(190)
  val    Bytes
  type   String? @db.VarChar(16)

  @@unique([tid, module, key], map: "index4")
  @@index([tid, key], map: "index2")
  @@index([module, tid], map: "index6")
}

model userman_ucp_templates {
  id                Int     @id @default(autoincrement())
  templatename      String  @db.VarChar(150)
  description       String? @db.VarChar(255)
  importedfromuname String? @db.VarChar(255)
  importedfromuid   String? @db.VarChar(255)
  defaultexten      String? @db.VarChar(255)
  hasupdated        Boolean @default(false)
}

model userman_users {
  id                Int     @id @default(autoincrement())
  auth              String? @default("freepbx") @db.VarChar(150)
  authid            String? @db.VarChar(750)
  username          String? @db.VarChar(150)
  description       String? @db.VarChar(255)
  password          String? @db.VarChar(255)
  default_extension String  @default("none") @db.VarChar(45)
  primary_group     Int?
  permissions       Bytes?
  fname             String? @db.VarChar(100)
  lname             String? @db.VarChar(100)
  displayname       String? @db.VarChar(200)
  title             String? @db.VarChar(100)
  company           String? @db.VarChar(100)
  department        String? @db.VarChar(100)
  language          String? @db.VarChar(100)
  timezone          String? @db.VarChar(100)
  dateformat        String? @db.VarChar(100)
  timeformat        String? @db.VarChar(100)
  datetimeformat    String? @db.VarChar(100)
  email             String? @db.LongText
  cell              String? @db.VarChar(100)
  work              String? @db.VarChar(100)
  home              String? @db.VarChar(100)
  fax               String? @db.VarChar(100)

  @@unique([username, auth], map: "username_UNIQUE")
}

model userman_users_settings {
  uid    Int
  module String  @db.VarChar(65)
  key    String  @db.VarChar(190)
  val    Bytes
  type   String? @db.VarChar(16)

  @@unique([uid, module, key], map: "index4")
  @@index([uid, key], map: "index2")
  @@index([module, uid], map: "index6")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model users {
  extension        String  @default("") @db.VarChar(20)
  password         String? @db.VarChar(20)
  name             String? @db.VarChar(50)
  voicemail        String? @db.VarChar(50)
  ringtimer        Int?
  noanswer         String? @db.VarChar(100)
  recording        String? @db.VarChar(50)
  outboundcid      String? @db.VarChar(50)
  sipname          String? @db.VarChar(50)
  noanswer_cid     String  @default("") @db.VarChar(20)
  busy_cid         String  @default("") @db.VarChar(20)
  chanunavail_cid  String  @default("") @db.VarChar(20)
  noanswer_dest    String  @default("") @db.VarChar(255)
  busy_dest        String  @default("") @db.VarChar(255)
  chanunavail_dest String  @default("") @db.VarChar(255)
  mohclass         String? @default("default") @db.VarChar(80)

  @@index([extension], map: "extension")
  @@ignore
}

model voicemail_admin {
  variable String @id @default("") @db.VarChar(30)
  value    String @default("") @db.VarChar(80)
}
